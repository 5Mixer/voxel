// Generated by HLC 4.1.3 (HL v4)
#ifndef INC_kha__SystemImpl
#define INC_kha__SystemImpl
typedef struct _kha__$SystemImpl *kha__$SystemImpl;
typedef struct _kha__SystemImpl *kha__SystemImpl;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <kha/Framebuffer.h>
#include <kha/input/Keyboard.h>
#include <kha/input/Mouse.h>
#include <kha/input/Pen.h>
#include <kha/input/Gamepad.h>
#include <kha/input/Surface.h>
#include <hl/types/ArrayObj.h>
#include <kha/SystemOptions.h>
#include <kha/Window.h>


struct _kha__$SystemImpl {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	kha__Framebuffer framebuffer;
	kha__input__Keyboard keyboard;
	kha__input__Mouse mouse;
	kha__input__Pen pen;
	kha__input__Gamepad gamepad1;
	kha__input__Gamepad gamepad2;
	kha__input__Gamepad gamepad3;
	kha__input__Gamepad gamepad4;
	kha__input__Surface surface;
	hl__types__ArrayObj mouseLockListeners;
	vclosure* init;
	vclosure* initEx;
	vclosure* frame;
	vclosure* getTime;
	vclosure* windowWidth;
	vclosure* windowHeight;
	vclosure* getScreenRotation;
	vclosure* getSystemId;
	vclosure* vibrate;
	vclosure* getLanguage;
	vclosure* requestShutdown;
	vclosure* getMouse;
	vclosure* getPen;
	vclosure* getKeyboard;
	vclosure* lockMouse;
	vclosure* unlockMouse;
	vclosure* canLockMouse;
	vclosure* isMouseLocked;
	vclosure* notifyOfMouseLockChange;
	vclosure* removeFromMouseLockChange;
	vclosure* hideSystemCursor;
	vclosure* showSystemCursor;
	vclosure* keyDown;
	vclosure* keyUp;
	vclosure* keyPress;
	vclosure* mouseDown;
	vclosure* mouseUp;
	vclosure* mouseMove;
	vclosure* mouseWheel;
	vclosure* mouseLeave;
	vclosure* penDown;
	vclosure* penUp;
	vclosure* penMove;
	vclosure* gamepad1Axis;
	vclosure* gamepad1Button;
	vclosure* gamepad2Axis;
	vclosure* gamepad2Button;
	vclosure* gamepad3Axis;
	vclosure* gamepad3Button;
	vclosure* gamepad4Axis;
	vclosure* gamepad4Button;
	vclosure* touchStart;
	vclosure* touchEnd;
	vclosure* touchMove;
	vclosure* foreground;
	vclosure* resume;
	vclosure* pause;
	vclosure* background;
	vclosure* shutdown;
	vclosure* dropFiles;
	vclosure* copy;
	vclosure* cut;
	vclosure* paste;
	hl__types__ArrayObj fullscreenListeners;
	int previousWidth;
	int previousHeight;
	vclosure* canSwitchFullscreen;
	vclosure* isFullscreen;
	vclosure* requestFullscreen;
	vclosure* exitFullscreen;
	vclosure* notifyOfFullscreenChange;
	vclosure* removeFromFullscreenChange;
	vclosure* changeResolution;
	vclosure* setKeepScreenOn;
	vclosure* loadUrl;
	vclosure* getGamepadId;
	vclosure* getGamepadVendor;
	vclosure* safeZone;
	vclosure* login;
	vclosure* automaticSafeZone;
	vclosure* setSafeZone;
	vclosure* unlockAchievement;
	vclosure* waitingForLogin;
	vclosure* disallowUserChange;
	vclosure* allowUserChange;
};
struct _kha__SystemImpl {
	hl_type *$type;
};
#endif

