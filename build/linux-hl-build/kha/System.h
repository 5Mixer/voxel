// Generated by HLC 4.1.3 (HL v4)
#ifndef INC_kha__System
#define INC_kha__System
typedef struct _kha__$System *kha__$System;
typedef struct _kha__System *kha__System;
#include <kha/Framebuffer.h>
#include <kha/System.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <kha/SystemOptions.h>
#include <kha/Window.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	vclosure* p0;
	int p1;
} Enumt$ctx_d8e6a04;
struct _kha__$System {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	hl__types__ArrayObj renderListeners;
	hl__types__ArrayObj foregroundListeners;
	hl__types__ArrayObj resumeListeners;
	hl__types__ArrayObj pauseListeners;
	hl__types__ArrayObj backgroundListeners;
	hl__types__ArrayObj shutdownListeners;
	hl__types__ArrayObj dropFilesListeners;
	vclosure* cutListener;
	vclosure* copyListener;
	vclosure* pasteListener;
	vclosure* loginListener;
	vclosure* logoutListener;
	String theTitle;
	vclosure* init;
	vclosure* start;
	vclosure* get_title;
	vclosure* notifyOnRender;
	vclosure* notifyOnFrames;
	vclosure* removeFramesListener;
	vclosure* notifyOnApplicationState;
	vclosure* removeApplicationStateListeners;
	vclosure* notifyOnDropFiles;
	vclosure* removeDropListener;
	vclosure* notifyOnCutCopyPaste;
	vclosure* notifyOnLoginLogout;
	vclosure* login;
	vclosure* waitingForLogin;
	vclosure* allowUserChange;
	vclosure* disallowUserChange;
	vclosure* render;
	vclosure* foreground;
	vclosure* resume;
	vclosure* pause;
	vclosure* background;
	vclosure* shutdown;
	vclosure* dropFiles;
	double time;
	vclosure* get_time;
	vclosure* windowWidth;
	vclosure* windowHeight;
	int screenRotation;
	vclosure* get_screenRotation;
	String systemId;
	vclosure* get_systemId;
	vclosure* vibrate;
	vclosure* get_language;
	vclosure* stop;
	vclosure* loadUrl;
	vclosure* canSwitchFullscreen;
	vclosure* isFullscreen;
	vclosure* requestFullscreen;
	vclosure* exitFullscreen;
	vclosure* notifyOnFullscreenChange;
	vclosure* removeFullscreenListener;
	vclosure* changeResolution;
	vclosure* requestShutdown;
	bool vsync;
	vclosure* get_vsync;
	int refreshRate;
	vclosure* get_refreshRate;
	vclosure* screenDpi;
	vclosure* safeZone;
	vclosure* automaticSafeZone;
	vclosure* setSafeZone;
	vclosure* unlockAchievement;
};
struct _kha__System {
	hl_type *$type;
};
#endif

