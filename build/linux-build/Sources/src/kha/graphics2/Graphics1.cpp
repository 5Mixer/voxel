// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <hxinc/haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha_graphics1_Graphics
#include <hxinc/kha/graphics1/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <hxinc/kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics1
#include <hxinc/kha/graphics2/Graphics1.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_61acc156bd8c0490_16_new,"kha.graphics2.Graphics1","new",0x61c994e7,"kha.graphics2.Graphics1.new","kha/graphics2/Graphics1.hx",16,0x861a0aab)
HX_LOCAL_STACK_FRAME(_hx_pos_61acc156bd8c0490_19_begin,"kha.graphics2.Graphics1","begin",0xae2b1e70,"kha.graphics2.Graphics1.begin","kha/graphics2/Graphics1.hx",19,0x861a0aab)
HX_LOCAL_STACK_FRAME(_hx_pos_61acc156bd8c0490_26_end,"kha.graphics2.Graphics1","end",0x61c2c862,"kha.graphics2.Graphics1.end","kha/graphics2/Graphics1.hx",26,0x861a0aab)
HX_LOCAL_STACK_FRAME(_hx_pos_61acc156bd8c0490_37_setPixel,"kha.graphics2.Graphics1","setPixel",0xf429a19d,"kha.graphics2.Graphics1.setPixel","kha/graphics2/Graphics1.hx",37,0x861a0aab)
namespace kha{
namespace graphics2{

void Graphics1_obj::__construct(::Dynamic canvas){
            	HX_GC_STACKFRAME(&_hx_pos_61acc156bd8c0490_16_new)
HXDLIN(  16)		this->_hx_set_canvas(HX_CTX, canvas);
            	}

Dynamic Graphics1_obj::__CreateEmpty() { return new Graphics1_obj; }

void *Graphics1_obj::_hx_vtable = 0;

Dynamic Graphics1_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Graphics1_obj > _hx_result = new Graphics1_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Graphics1_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x00a38dbf;
}

static ::kha::graphics1::Graphics_obj _hx_kha_graphics2_Graphics1__hx_kha_graphics1_Graphics= {
	( void (::hx::Object::*)())&::kha::graphics2::Graphics1_obj::begin,
	( void (::hx::Object::*)())&::kha::graphics2::Graphics1_obj::end,
	( void (::hx::Object::*)(int,int,int))&::kha::graphics2::Graphics1_obj::setPixel,
};

void *Graphics1_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x379412cd: return &_hx_kha_graphics2_Graphics1__hx_kha_graphics1_Graphics;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void Graphics1_obj::begin(){
            	HX_GC_STACKFRAME(&_hx_pos_61acc156bd8c0490_19_begin)
HXLINE(  20)		bool _hx_tmp;
HXDLIN(  20)		if (::hx::IsNotNull( this->texture )) {
HXLINE(  20)			int _hx_tmp1 = this->texture->get_realWidth();
HXDLIN(  20)			if ((_hx_tmp1 == ::kha::Canvas_obj::get_width(this->canvas))) {
HXLINE(  20)				int _hx_tmp1 = this->texture->get_realHeight();
HXDLIN(  20)				_hx_tmp = (_hx_tmp1 != ::kha::Canvas_obj::get_height(this->canvas));
            			}
            			else {
HXLINE(  20)				_hx_tmp = true;
            			}
            		}
            		else {
HXLINE(  20)			_hx_tmp = true;
            		}
HXDLIN(  20)		if (_hx_tmp) {
HXLINE(  21)			int _hx_tmp = ::kha::Canvas_obj::get_width(this->canvas);
HXDLIN(  21)			this->_hx_set_texture(HX_CTX, ::kha::Image_obj::create(_hx_tmp,::kha::Canvas_obj::get_height(this->canvas),0,2));
            		}
HXLINE(  23)		this->_hx_set_pixels(HX_CTX, this->texture->lock(null()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics1_obj,begin,(void))

void Graphics1_obj::end(){
            	HX_STACKFRAME(&_hx_pos_61acc156bd8c0490_26_end)
HXLINE(  27)		this->texture->unlock();
HXLINE(  28)		::kha::Canvas_obj::get_g2(this->canvas)->begin(false,null());
HXLINE(  29)		::kha::Canvas_obj::get_g2(this->canvas)->drawImage(this->texture,( (float)(0) ),( (float)(0) ));
HXLINE(  30)		::kha::Canvas_obj::get_g2(this->canvas)->end();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics1_obj,end,(void))

void Graphics1_obj::setPixel(int x,int y,int color){
            	HX_STACKFRAME(&_hx_pos_61acc156bd8c0490_37_setPixel)
HXDLIN(  37)		 ::haxe::io::Bytes _this = this->pixels;
HXDLIN(  37)		int pos = ((y * this->texture->get_stride()) + (x * 4));
HXDLIN(  37)		_this->b[pos] = ( (unsigned char)(color) );
HXDLIN(  37)		_this->b[(pos + 1)] = ( (unsigned char)((color >> 8)) );
HXDLIN(  37)		_this->b[(pos + 2)] = ( (unsigned char)((color >> 16)) );
HXDLIN(  37)		_this->b[(pos + 3)] = ( (unsigned char)(::hx::UShr(color,24)) );
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics1_obj,setPixel,(void))


::hx::ObjectPtr< Graphics1_obj > Graphics1_obj::__new(::Dynamic canvas) {
	::hx::ObjectPtr< Graphics1_obj > __this = new Graphics1_obj();
	__this->__construct(canvas);
	return __this;
}

::hx::ObjectPtr< Graphics1_obj > Graphics1_obj::__alloc(::hx::Ctx *_hx_ctx,::Dynamic canvas) {
	Graphics1_obj *__this = (Graphics1_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Graphics1_obj), true, "kha.graphics2.Graphics1"));
	*(void **)__this = Graphics1_obj::_hx_vtable;
	__this->__construct(canvas);
	return __this;
}

Graphics1_obj::Graphics1_obj()
{
}

void Graphics1_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Graphics1);
	HX_MARK_MEMBER_NAME(canvas,"canvas");
	HX_MARK_MEMBER_NAME(texture,"texture");
	HX_MARK_MEMBER_NAME(pixels,"pixels");
	HX_MARK_END_CLASS();
}

void Graphics1_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(canvas,"canvas");
	HX_VISIT_MEMBER_NAME(texture,"texture");
	HX_VISIT_MEMBER_NAME(pixels,"pixels");
}

::hx::Val Graphics1_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return ::hx::Val( end_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return ::hx::Val( begin_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"canvas") ) { return ::hx::Val( canvas ); }
		if (HX_FIELD_EQ(inName,"pixels") ) { return ::hx::Val( pixels ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"texture") ) { return ::hx::Val( texture ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setPixel") ) { return ::hx::Val( setPixel_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Graphics1_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"canvas") ) { _hx_set_canvas(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"pixels") ) { _hx_set_pixels(HX_CTX_GET,inValue.Cast<  ::haxe::io::Bytes >()); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"texture") ) { _hx_set_texture(HX_CTX_GET,inValue.Cast<  ::kha::Image >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Graphics1_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("canvas",d8,54,42,b8));
	outFields->push(HX_("texture",db,c8,e0,9e));
	outFields->push(HX_("pixels",2d,ef,a9,8c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Graphics1_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(Graphics1_obj,canvas),HX_("canvas",d8,54,42,b8)},
	{::hx::fsObject /*  ::kha::Image */ ,(int)offsetof(Graphics1_obj,texture),HX_("texture",db,c8,e0,9e)},
	{::hx::fsObject /*  ::haxe::io::Bytes */ ,(int)offsetof(Graphics1_obj,pixels),HX_("pixels",2d,ef,a9,8c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Graphics1_obj_sStaticStorageInfo = 0;
#endif

static ::String Graphics1_obj_sMemberFields[] = {
	HX_("canvas",d8,54,42,b8),
	HX_("texture",db,c8,e0,9e),
	HX_("pixels",2d,ef,a9,8c),
	HX_("begin",29,ea,55,b0),
	HX_("end",db,03,4d,00),
	HX_("setPixel",84,2f,d8,d0),
	::String(null()) };

::hx::Class Graphics1_obj::__mClass;

void Graphics1_obj::__register()
{
	Graphics1_obj _hx_dummy;
	Graphics1_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.graphics2.Graphics1",75,95,3d,ce);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Graphics1_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Graphics1_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Graphics1_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Graphics1_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace graphics2
