// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <hxinc/haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha_graphics1_Graphics
#include <hxinc/kha/graphics1/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <hxinc/kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics4_CubeMap
#include <hxinc/kha/graphics4/CubeMap.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics
#include <hxinc/kha/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_kore_graphics4_Graphics
#include <hxinc/kha/kore/graphics4/Graphics.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_17_new,"kha.graphics4.CubeMap","new",0xe8bcde4a,"kha.graphics4.CubeMap.new","kha/graphics4/CubeMap.hx",17,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_33_initRenderTarget,"kha.graphics4.CubeMap","initRenderTarget",0xf325de4d,"kha.graphics4.CubeMap.initRenderTarget","kha/graphics4/CubeMap.hx",33,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_89_unload,"kha.graphics4.CubeMap","unload",0x1735a155,"kha.graphics4.CubeMap.unload","kha/graphics4/CubeMap.hx",89,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_94_lock,"kha.graphics4.CubeMap","lock",0xbb3abac1,"kha.graphics4.CubeMap.lock","kha/graphics4/CubeMap.hx",94,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_97_unlock,"kha.graphics4.CubeMap","unlock",0x1735a31a,"kha.graphics4.CubeMap.unlock","kha/graphics4/CubeMap.hx",97,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_106_get_width,"kha.graphics4.CubeMap","get_width",0x44db6bc7,"kha.graphics4.CubeMap.get_width","kha/graphics4/CubeMap.hx",106,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_111_get_height,"kha.graphics4.CubeMap","get_height",0xb1725b06,"kha.graphics4.CubeMap.get_height","kha/graphics4/CubeMap.hx",111,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_116_get_g1,"kha.graphics4.CubeMap","get_g1",0x54d8f189,"kha.graphics4.CubeMap.get_g1","kha/graphics4/CubeMap.hx",116,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_121_get_g2,"kha.graphics4.CubeMap","get_g2",0x54d8f18a,"kha.graphics4.CubeMap.get_g2","kha/graphics4/CubeMap.hx",121,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_125_get_g4,"kha.graphics4.CubeMap","get_g4",0x54d8f18c,"kha.graphics4.CubeMap.get_g4","kha/graphics4/CubeMap.hx",125,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_22_createRenderTarget,"kha.graphics4.CubeMap","createRenderTarget",0x6a345db9,"kha.graphics4.CubeMap.createRenderTarget","kha/graphics4/CubeMap.hx",22,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_25_create2,"kha.graphics4.CubeMap","create2",0xd3a200a0,"kha.graphics4.CubeMap.create2","kha/graphics4/CubeMap.hx",25,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_38_getRenderTargetFormat,"kha.graphics4.CubeMap","getRenderTargetFormat",0xe1ac7c7e,"kha.graphics4.CubeMap.getRenderTargetFormat","kha/graphics4/CubeMap.hx",38,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_53_getDepthBufferBits,"kha.graphics4.CubeMap","getDepthBufferBits",0x5f6da469,"kha.graphics4.CubeMap.getDepthBufferBits","kha/graphics4/CubeMap.hx",53,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_64_getStencilBufferBits,"kha.graphics4.CubeMap","getStencilBufferBits",0x7621daa2,"kha.graphics4.CubeMap.getStencilBufferBits","kha/graphics4/CubeMap.hx",64,0x66aaca28)
HX_LOCAL_STACK_FRAME(_hx_pos_aa06a0c0fe3a8b8d_75_getTextureFormat,"kha.graphics4.CubeMap","getTextureFormat",0x046813d2,"kha.graphics4.CubeMap.getTextureFormat","kha/graphics4/CubeMap.hx",75,0x66aaca28)
namespace kha{
namespace graphics4{

void CubeMap_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_17_new)
            	}

Dynamic CubeMap_obj::__CreateEmpty() { return new CubeMap_obj; }

void *CubeMap_obj::_hx_vtable = 0;

Dynamic CubeMap_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CubeMap_obj > _hx_result = new CubeMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CubeMap_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1afa75c2;
}

static ::kha::Canvas_obj _hx_kha_graphics4_CubeMap__hx_kha_Canvas= {
	( int (::hx::Object::*)())&::kha::graphics4::CubeMap_obj::get_width,
	( int (::hx::Object::*)())&::kha::graphics4::CubeMap_obj::get_height,
	( ::Dynamic (::hx::Object::*)())&::kha::graphics4::CubeMap_obj::get_g1,
	(  ::kha::graphics2::Graphics (::hx::Object::*)())&::kha::graphics4::CubeMap_obj::get_g2,
	( ::Dynamic (::hx::Object::*)())&::kha::graphics4::CubeMap_obj::get_g4,
};

static ::kha::Resource_obj _hx_kha_graphics4_CubeMap__hx_kha_Resource= {
	( void (::hx::Object::*)())&::kha::graphics4::CubeMap_obj::unload,
};

void *CubeMap_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x36d1dbdc: return &_hx_kha_graphics4_CubeMap__hx_kha_Canvas;
		case (int)0xf962acd2: return &_hx_kha_graphics4_CubeMap__hx_kha_Resource;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void CubeMap_obj::initRenderTarget(int cubeMapSize,int depthBufferBits,int format,int stencilBufferBits,int contextId){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_33_initRenderTarget)
            	renderTarget = new Kore::Graphics4::RenderTarget(cubeMapSize, depthBufferBits, false, (Kore::Graphics4::RenderTargetFormat)format, stencilBufferBits, contextId); texture = nullptr;

            	}


HX_DEFINE_DYNAMIC_FUNC5(CubeMap_obj,initRenderTarget,(void))

void CubeMap_obj::unload(){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_89_unload)
            	}


HX_DEFINE_DYNAMIC_FUNC0(CubeMap_obj,unload,(void))

 ::haxe::io::Bytes CubeMap_obj::lock(::hx::Null< int >  __o_level){
            		int level = __o_level.Default(0);
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_94_lock)
HXDLIN(  94)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CubeMap_obj,lock,return )

void CubeMap_obj::unlock(){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_97_unlock)
            	}


HX_DEFINE_DYNAMIC_FUNC0(CubeMap_obj,unlock,(void))

int CubeMap_obj::get_width(){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_106_get_width)
            	if (texture != nullptr) return texture->width; else return renderTarget->width;

HXDLIN( 106)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CubeMap_obj,get_width,return )

int CubeMap_obj::get_height(){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_111_get_height)
            	if (texture != nullptr) return texture->height; else return renderTarget->height;

HXDLIN( 111)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CubeMap_obj,get_height,return )

::Dynamic CubeMap_obj::get_g1(){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_116_get_g1)
HXDLIN( 116)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(CubeMap_obj,get_g1,return )

 ::kha::graphics2::Graphics CubeMap_obj::get_g2(){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_121_get_g2)
HXDLIN( 121)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(CubeMap_obj,get_g2,return )

::Dynamic CubeMap_obj::get_g4(){
            	HX_GC_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_125_get_g4)
HXLINE( 126)		if (::hx::IsNull( this->graphics4 )) {
HXLINE( 127)			this->_hx_set_graphics4(HX_CTX,  ::kha::kore::graphics4::Graphics_obj::__alloc( HX_CTX ,::hx::ObjectPtr<OBJ_>(this)));
            		}
HXLINE( 129)		return this->graphics4;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CubeMap_obj,get_g4,return )

 ::kha::graphics4::CubeMap CubeMap_obj::createRenderTarget(int size, ::Dynamic format, ::Dynamic depthStencil,::hx::Null< int >  __o_contextId){
            		int contextId = __o_contextId.Default(0);
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_22_createRenderTarget)
HXDLIN(  22)		int _hx_tmp;
HXDLIN(  22)		if (::hx::IsNull( format )) {
HXDLIN(  22)			_hx_tmp = 0;
            		}
            		else {
HXDLIN(  22)			_hx_tmp = ( (int)(format) );
            		}
HXDLIN(  22)		return ::kha::graphics4::CubeMap_obj::create2(size,_hx_tmp,false,true,( (int)(depthStencil) ),contextId);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CubeMap_obj,createRenderTarget,return )

 ::kha::graphics4::CubeMap CubeMap_obj::create2(int size,int format,bool readable,bool renderTarget,int depthStencil,int contextId){
            	HX_GC_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_25_create2)
HXLINE(  26)		 ::kha::graphics4::CubeMap cubeMap =  ::kha::graphics4::CubeMap_obj::__alloc( HX_CTX );
HXLINE(  27)		cubeMap->format = format;
HXLINE(  28)		if (renderTarget) {
HXLINE(  28)			int _hx_tmp = ::kha::graphics4::CubeMap_obj::getDepthBufferBits(depthStencil);
HXDLIN(  28)			int _hx_tmp1 = ::kha::graphics4::CubeMap_obj::getRenderTargetFormat(format);
HXDLIN(  28)			cubeMap->initRenderTarget(size,_hx_tmp,_hx_tmp1,::kha::graphics4::CubeMap_obj::getStencilBufferBits(depthStencil),contextId);
            		}
HXLINE(  29)		return cubeMap;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CubeMap_obj,create2,return )

int CubeMap_obj::getRenderTargetFormat(int format){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_38_getRenderTargetFormat)
HXDLIN(  38)		switch((int)(format)){
            			case (int)0: {
HXLINE(  40)				return 0;
            			}
            			break;
            			case (int)2: {
HXLINE(  44)				return 3;
            			}
            			break;
            			case (int)3: {
HXLINE(  46)				return 4;
            			}
            			break;
            			case (int)4: {
HXLINE(  42)				return 1;
            			}
            			break;
            			default:{
HXLINE(  48)				return 0;
            			}
            		}
HXLINE(  38)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CubeMap_obj,getRenderTargetFormat,return )

int CubeMap_obj::getDepthBufferBits(int depthAndStencil){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_53_getDepthBufferBits)
HXDLIN(  53)		switch((int)(depthAndStencil)){
            			case (int)0: {
HXLINE(  54)				return -1;
            			}
            			break;
            			case (int)1: {
HXLINE(  55)				return 24;
            			}
            			break;
            			case (int)2: {
HXLINE(  56)				return 24;
            			}
            			break;
            			case (int)3: {
HXLINE(  57)				return 24;
            			}
            			break;
            			case (int)4: {
HXLINE(  58)				return 32;
            			}
            			break;
            			case (int)5: {
HXLINE(  59)				return 16;
            			}
            			break;
            		}
HXLINE(  53)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CubeMap_obj,getDepthBufferBits,return )

int CubeMap_obj::getStencilBufferBits(int depthAndStencil){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_64_getStencilBufferBits)
HXDLIN(  64)		switch((int)(depthAndStencil)){
            			case (int)0: {
HXLINE(  65)				return -1;
            			}
            			break;
            			case (int)1: {
HXLINE(  66)				return -1;
            			}
            			break;
            			case (int)2: {
HXLINE(  67)				return 8;
            			}
            			break;
            			case (int)3: {
HXLINE(  68)				return 8;
            			}
            			break;
            			case (int)4: {
HXLINE(  69)				return 8;
            			}
            			break;
            			case (int)5: {
HXLINE(  70)				return 0;
            			}
            			break;
            		}
HXLINE(  64)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CubeMap_obj,getStencilBufferBits,return )

int CubeMap_obj::getTextureFormat(int format){
            	HX_STACKFRAME(&_hx_pos_aa06a0c0fe3a8b8d_75_getTextureFormat)
HXDLIN(  75)		switch((int)(format)){
            			case (int)0: {
HXLINE(  77)				return 0;
            			}
            			break;
            			case (int)2: {
HXLINE(  79)				return 3;
            			}
            			break;
            			case (int)4: {
HXLINE(  81)				return 4;
            			}
            			break;
            			case (int)5: {
HXLINE(  83)				return 5;
            			}
            			break;
            			default:{
HXLINE(  85)				return 1;
            			}
            		}
HXLINE(  75)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CubeMap_obj,getTextureFormat,return )


::hx::ObjectPtr< CubeMap_obj > CubeMap_obj::__new() {
	::hx::ObjectPtr< CubeMap_obj > __this = new CubeMap_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< CubeMap_obj > CubeMap_obj::__alloc(::hx::Ctx *_hx_ctx) {
	CubeMap_obj *__this = (CubeMap_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CubeMap_obj), true, "kha.graphics4.CubeMap"));
	*(void **)__this = CubeMap_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

CubeMap_obj::CubeMap_obj()
{
}

void CubeMap_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CubeMap);
	HX_MARK_MEMBER_NAME(format,"format");
	HX_MARK_MEMBER_NAME(graphics4,"graphics4");
	HX_MARK_MEMBER_NAME(width,"width");
	HX_MARK_MEMBER_NAME(height,"height");
	HX_MARK_MEMBER_NAME(g1,"g1");
	HX_MARK_MEMBER_NAME(g2,"g2");
	HX_MARK_MEMBER_NAME(g4,"g4");
	HX_MARK_END_CLASS();
}

void CubeMap_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(format,"format");
	HX_VISIT_MEMBER_NAME(graphics4,"graphics4");
	HX_VISIT_MEMBER_NAME(width,"width");
	HX_VISIT_MEMBER_NAME(height,"height");
	HX_VISIT_MEMBER_NAME(g1,"g1");
	HX_VISIT_MEMBER_NAME(g2,"g2");
	HX_VISIT_MEMBER_NAME(g4,"g4");
}

::hx::Val CubeMap_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"g1") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_g1() : g1 ); }
		if (HX_FIELD_EQ(inName,"g2") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_g2() : g2 ); }
		if (HX_FIELD_EQ(inName,"g4") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_g4() : g4 ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"lock") ) { return ::hx::Val( lock_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_width() : width ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"format") ) { return ::hx::Val( format ); }
		if (HX_FIELD_EQ(inName,"unload") ) { return ::hx::Val( unload_dyn() ); }
		if (HX_FIELD_EQ(inName,"unlock") ) { return ::hx::Val( unlock_dyn() ); }
		if (HX_FIELD_EQ(inName,"height") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_height() : height ); }
		if (HX_FIELD_EQ(inName,"get_g1") ) { return ::hx::Val( get_g1_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_g2") ) { return ::hx::Val( get_g2_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_g4") ) { return ::hx::Val( get_g4_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"graphics4") ) { return ::hx::Val( graphics4 ); }
		if (HX_FIELD_EQ(inName,"get_width") ) { return ::hx::Val( get_width_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_height") ) { return ::hx::Val( get_height_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"initRenderTarget") ) { return ::hx::Val( initRenderTarget_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool CubeMap_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"create2") ) { outValue = create2_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getTextureFormat") ) { outValue = getTextureFormat_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createRenderTarget") ) { outValue = createRenderTarget_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getDepthBufferBits") ) { outValue = getDepthBufferBits_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"getStencilBufferBits") ) { outValue = getStencilBufferBits_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"getRenderTargetFormat") ) { outValue = getRenderTargetFormat_dyn(); return true; }
	}
	return false;
}

::hx::Val CubeMap_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"g1") ) { _hx_set_g1(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"g2") ) { _hx_set_g2(HX_CTX_GET,inValue.Cast<  ::kha::graphics2::Graphics >()); return inValue; }
		if (HX_FIELD_EQ(inName,"g4") ) { _hx_set_g4(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { width=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"format") ) { format=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"height") ) { height=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"graphics4") ) { _hx_set_graphics4(HX_CTX_GET,inValue.Cast< ::Dynamic >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CubeMap_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("format",37,8f,8e,fd));
	outFields->push(HX_("graphics4",09,b9,91,08));
	outFields->push(HX_("width",06,b6,62,ca));
	outFields->push(HX_("height",e7,07,4c,02));
	outFields->push(HX_("g1",ea,59,00,00));
	outFields->push(HX_("g2",eb,59,00,00));
	outFields->push(HX_("g4",ed,59,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CubeMap_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(CubeMap_obj,format),HX_("format",37,8f,8e,fd)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(CubeMap_obj,graphics4),HX_("graphics4",09,b9,91,08)},
	{::hx::fsInt,(int)offsetof(CubeMap_obj,width),HX_("width",06,b6,62,ca)},
	{::hx::fsInt,(int)offsetof(CubeMap_obj,height),HX_("height",e7,07,4c,02)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(CubeMap_obj,g1),HX_("g1",ea,59,00,00)},
	{::hx::fsObject /*  ::kha::graphics2::Graphics */ ,(int)offsetof(CubeMap_obj,g2),HX_("g2",eb,59,00,00)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(CubeMap_obj,g4),HX_("g4",ed,59,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CubeMap_obj_sStaticStorageInfo = 0;
#endif

static ::String CubeMap_obj_sMemberFields[] = {
	HX_("format",37,8f,8e,fd),
	HX_("graphics4",09,b9,91,08),
	HX_("initRenderTarget",77,d6,84,e9),
	HX_("unload",ff,a0,8c,65),
	HX_("lock",eb,9b,b7,47),
	HX_("unlock",c4,a2,8c,65),
	HX_("width",06,b6,62,ca),
	HX_("height",e7,07,4c,02),
	HX_("get_width",5d,12,0c,0e),
	HX_("get_height",b0,77,d3,f2),
	HX_("g1",ea,59,00,00),
	HX_("get_g1",33,f1,2f,a3),
	HX_("g2",eb,59,00,00),
	HX_("get_g2",34,f1,2f,a3),
	HX_("g4",ed,59,00,00),
	HX_("get_g4",36,f1,2f,a3),
	::String(null()) };

::hx::Class CubeMap_obj::__mClass;

static ::String CubeMap_obj_sStaticFields[] = {
	HX_("createRenderTarget",63,34,61,f0),
	HX_("create2",b6,b5,6a,11),
	HX_("getRenderTargetFormat",14,ac,07,63),
	HX_("getDepthBufferBits",13,7b,9a,e5),
	HX_("getStencilBufferBits",cc,2f,31,82),
	HX_("getTextureFormat",fc,0b,c7,fa),
	::String(null())
};

void CubeMap_obj::__register()
{
	CubeMap_obj _hx_dummy;
	CubeMap_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.graphics4.CubeMap",58,b1,91,95);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CubeMap_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CubeMap_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CubeMap_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CubeMap_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CubeMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CubeMap_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace graphics4
