// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_kha_graphics4_VertexElement
#include <hxinc/kha/graphics4/VertexElement.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_852acc89e80f4237_7_new,"kha.graphics4.VertexElement","new",0x72dc589b,"kha.graphics4.VertexElement.new","kha/graphics4/VertexElement.hx",7,0x02fd8277)
namespace kha{
namespace graphics4{

void VertexElement_obj::__construct(::String name,int data){
            	HX_GC_STACKFRAME(&_hx_pos_852acc89e80f4237_7_new)
HXLINE(   8)		this->_hx_set_name(HX_CTX, name);
HXLINE(   9)		this->data = data;
            	}

Dynamic VertexElement_obj::__CreateEmpty() { return new VertexElement_obj; }

void *VertexElement_obj::_hx_vtable = 0;

Dynamic VertexElement_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< VertexElement_obj > _hx_result = new VertexElement_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool VertexElement_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x55065f13;
}


VertexElement_obj::VertexElement_obj()
{
}

void VertexElement_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VertexElement);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(data,"data");
	HX_MARK_END_CLASS();
}

void VertexElement_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(data,"data");
}

::hx::Val VertexElement_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"data") ) { return ::hx::Val( data ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val VertexElement_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { _hx_set_name(HX_CTX_GET,inValue.Cast< ::String >()); return inValue; }
		if (HX_FIELD_EQ(inName,"data") ) { data=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VertexElement_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("data",2a,56,63,42));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo VertexElement_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(VertexElement_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsInt,(int)offsetof(VertexElement_obj,data),HX_("data",2a,56,63,42)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *VertexElement_obj_sStaticStorageInfo = 0;
#endif

static ::String VertexElement_obj_sMemberFields[] = {
	HX_("name",4b,72,ff,48),
	HX_("data",2a,56,63,42),
	::String(null()) };

::hx::Class VertexElement_obj::__mClass;

void VertexElement_obj::__register()
{
	VertexElement_obj _hx_dummy;
	VertexElement_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.graphics4.VertexElement",29,6f,cf,2a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(VertexElement_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< VertexElement_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VertexElement_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VertexElement_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace graphics4
