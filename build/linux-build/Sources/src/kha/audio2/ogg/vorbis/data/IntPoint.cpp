// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_IntPoint
#include <hxinc/kha/audio2/ogg/vorbis/data/IntPoint.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c6f2e87243923e54_12_new,"kha.audio2.ogg.vorbis.data.IntPoint","new",0xe44b1523,"kha.audio2.ogg.vorbis.data.IntPoint.new","kha/audio2/ogg/vorbis/data/IntPoint.hx",12,0x8c1b814c)
namespace kha{
namespace audio2{
namespace ogg{
namespace vorbis{
namespace data{

void IntPoint_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_c6f2e87243923e54_12_new)
            	}

Dynamic IntPoint_obj::__CreateEmpty() { return new IntPoint_obj; }

void *IntPoint_obj::_hx_vtable = 0;

Dynamic IntPoint_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< IntPoint_obj > _hx_result = new IntPoint_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool IntPoint_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2be98d0d;
}


IntPoint_obj::IntPoint_obj()
{
}

::hx::Val IntPoint_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return ::hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return ::hx::Val( y ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val IntPoint_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IntPoint_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("x",78,00,00,00));
	outFields->push(HX_("y",79,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo IntPoint_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(IntPoint_obj,x),HX_("x",78,00,00,00)},
	{::hx::fsInt,(int)offsetof(IntPoint_obj,y),HX_("y",79,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *IntPoint_obj_sStaticStorageInfo = 0;
#endif

static ::String IntPoint_obj_sMemberFields[] = {
	HX_("x",78,00,00,00),
	HX_("y",79,00,00,00),
	::String(null()) };

::hx::Class IntPoint_obj::__mClass;

void IntPoint_obj::__register()
{
	IntPoint_obj _hx_dummy;
	IntPoint_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.audio2.ogg.vorbis.data.IntPoint",b1,47,f3,72);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(IntPoint_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< IntPoint_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntPoint_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntPoint_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace audio2
} // end namespace ogg
} // end namespace vorbis
} // end namespace data
