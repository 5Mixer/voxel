// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_kha_audio2_ogg_tools_MathTools
#include <hxinc/kha/audio2/ogg/tools/MathTools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_16c5c39f7510fc01_10_ilog,"kha.audio2.ogg.tools.MathTools","ilog",0xbcfd2e30,"kha.audio2.ogg.tools.MathTools.ilog","kha/audio2/ogg/tools/MathTools.hx",10,0x19857227)
static const int _hx_array_data_c8d00219_1[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
namespace kha{
namespace audio2{
namespace ogg{
namespace tools{

void MathTools_obj::__construct() { }

Dynamic MathTools_obj::__CreateEmpty() { return new MathTools_obj; }

void *MathTools_obj::_hx_vtable = 0;

Dynamic MathTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MathTools_obj > _hx_result = new MathTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MathTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0af29c2f;
}

int MathTools_obj::ilog(int n){
            	HX_STACKFRAME(&_hx_pos_16c5c39f7510fc01_10_ilog)
HXLINE(  11)		::Array< int > log2_4 = ::Array_obj< int >::fromData( _hx_array_data_c8d00219_1,16);
HXLINE(  14)		if ((n < 16384)) {
HXLINE(  15)			if ((n < 16)) {
HXLINE(  16)				return log2_4->__get(n);
            			}
            			else {
HXLINE(  17)				if ((n < 512)) {
HXLINE(  18)					return (5 + log2_4->__get((n >> 5)));
            				}
            				else {
HXLINE(  20)					return (10 + log2_4->__get((n >> 10)));
            				}
            			}
            		}
            		else {
HXLINE(  22)			if ((n < 16777216)) {
HXLINE(  23)				if ((n < 524288)) {
HXLINE(  24)					return (15 + log2_4->__get((n >> 15)));
            				}
            				else {
HXLINE(  26)					return (20 + log2_4->__get((n >> 20)));
            				}
            			}
            			else {
HXLINE(  28)				if ((n < 536870912)) {
HXLINE(  29)					return (25 + log2_4->__get((n >> 25)));
            				}
            				else {
HXLINE(  30)					if ((n < (int)-2147483648)) {
HXLINE(  31)						return (30 + log2_4->__get((n >> 30)));
            					}
            					else {
HXLINE(  33)						return 0;
            					}
            				}
            			}
            		}
HXLINE(  14)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MathTools_obj,ilog,return )


MathTools_obj::MathTools_obj()
{
}

bool MathTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"ilog") ) { outValue = ilog_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *MathTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *MathTools_obj_sStaticStorageInfo = 0;
#endif

::hx::Class MathTools_obj::__mClass;

static ::String MathTools_obj_sStaticFields[] = {
	HX_("ilog",bb,bb,b9,45),
	::String(null())
};

void MathTools_obj::__register()
{
	MathTools_obj _hx_dummy;
	MathTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.audio2.ogg.tools.MathTools",19,02,d0,c8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MathTools_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(MathTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< MathTools_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MathTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MathTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace audio2
} // end namespace ogg
} // end namespace tools
