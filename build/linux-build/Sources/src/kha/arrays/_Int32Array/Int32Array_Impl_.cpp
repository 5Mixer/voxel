// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_3ee7a594df0770d6
#define INCLUDED_3ee7a594df0770d6
#include "cpp_int32array.h"
#endif
#ifndef INCLUDED_kha_arrays_Int32ArrayPrivate
#include <hxinc/kha/arrays/Int32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_arrays__Int32Array_Int32Array_Impl_
#include <hxinc/kha/arrays/_Int32Array/Int32Array_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_d08eb47c241fdf5e_46__new,"kha.arrays._Int32Array.Int32Array_Impl_","_new",0xe3222c56,"kha.arrays._Int32Array.Int32Array_Impl_._new","kha/arrays/Int32Array.hx",46,0x919f4bc9)
HX_LOCAL_STACK_FRAME(_hx_pos_d08eb47c241fdf5e_51_free,"kha.arrays._Int32Array.Int32Array_Impl_","free",0xe7c5b3a1,"kha.arrays._Int32Array.Int32Array_Impl_.free","kha/arrays/Int32Array.hx",51,0x919f4bc9)
HX_LOCAL_STACK_FRAME(_hx_pos_d08eb47c241fdf5e_57_get_length,"kha.arrays._Int32Array.Int32Array_Impl_","get_length",0x3c114164,"kha.arrays._Int32Array.Int32Array_Impl_.get_length","kha/arrays/Int32Array.hx",57,0x919f4bc9)
HX_LOCAL_STACK_FRAME(_hx_pos_d08eb47c241fdf5e_61_set,"kha.arrays._Int32Array.Int32Array_Impl_","set",0xb79b5a4d,"kha.arrays._Int32Array.Int32Array_Impl_.set","kha/arrays/Int32Array.hx",61,0x919f4bc9)
HX_LOCAL_STACK_FRAME(_hx_pos_d08eb47c241fdf5e_65_get,"kha.arrays._Int32Array.Int32Array_Impl_","get",0xb7923f41,"kha.arrays._Int32Array.Int32Array_Impl_.get","kha/arrays/Int32Array.hx",65,0x919f4bc9)
HX_LOCAL_STACK_FRAME(_hx_pos_d08eb47c241fdf5e_70_arrayRead,"kha.arrays._Int32Array.Int32Array_Impl_","arrayRead",0x5595b67a,"kha.arrays._Int32Array.Int32Array_Impl_.arrayRead","kha/arrays/Int32Array.hx",70,0x919f4bc9)
HX_LOCAL_STACK_FRAME(_hx_pos_d08eb47c241fdf5e_75_arrayWrite,"kha.arrays._Int32Array.Int32Array_Impl_","arrayWrite",0x7708c13b,"kha.arrays._Int32Array.Int32Array_Impl_.arrayWrite","kha/arrays/Int32Array.hx",75,0x919f4bc9)
namespace kha{
namespace arrays{
namespace _Int32Array{

void Int32Array_Impl__obj::__construct() { }

Dynamic Int32Array_Impl__obj::__CreateEmpty() { return new Int32Array_Impl__obj; }

void *Int32Array_Impl__obj::_hx_vtable = 0;

Dynamic Int32Array_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Int32Array_Impl__obj > _hx_result = new Int32Array_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Int32Array_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7c5ce277;
}

 ::kha::arrays::Int32ArrayPrivate Int32Array_Impl__obj::_new(::hx::Null< int >  __o_elements){
            		int elements = __o_elements.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_d08eb47c241fdf5e_46__new)
HXDLIN(  46)		 ::kha::arrays::Int32ArrayPrivate this1 =  ::kha::arrays::Int32ArrayPrivate_obj::__alloc( HX_CTX ,elements);
HXDLIN(  46)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int32Array_Impl__obj,_new,return )

void Int32Array_Impl__obj::free( ::kha::arrays::Int32ArrayPrivate this1){
            	HX_STACKFRAME(&_hx_pos_d08eb47c241fdf5e_51_free)
HXDLIN(  51)		this1->self.free();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int32Array_Impl__obj,free,(void))

int Int32Array_Impl__obj::get_length( ::kha::arrays::Int32ArrayPrivate this1){
            	HX_STACKFRAME(&_hx_pos_d08eb47c241fdf5e_57_get_length)
HXDLIN(  57)		return this1->self.length();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int32Array_Impl__obj,get_length,return )

int Int32Array_Impl__obj::set( ::kha::arrays::Int32ArrayPrivate this1,int index,int value){
            	HX_STACKFRAME(&_hx_pos_d08eb47c241fdf5e_61_set)
HXDLIN(  61)		return this1->self.set(index,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Int32Array_Impl__obj,set,return )

int Int32Array_Impl__obj::get( ::kha::arrays::Int32ArrayPrivate this1,int index){
            	HX_STACKFRAME(&_hx_pos_d08eb47c241fdf5e_65_get)
HXDLIN(  65)		return this1->self.get(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int32Array_Impl__obj,get,return )

int Int32Array_Impl__obj::arrayRead( ::kha::arrays::Int32ArrayPrivate this1,int index){
            	HX_STACKFRAME(&_hx_pos_d08eb47c241fdf5e_70_arrayRead)
HXDLIN(  70)		return this1->self.get(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int32Array_Impl__obj,arrayRead,return )

int Int32Array_Impl__obj::arrayWrite( ::kha::arrays::Int32ArrayPrivate this1,int index,int value){
            	HX_STACKFRAME(&_hx_pos_d08eb47c241fdf5e_75_arrayWrite)
HXDLIN(  75)		return this1->self.set(index,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Int32Array_Impl__obj,arrayWrite,return )


Int32Array_Impl__obj::Int32Array_Impl__obj()
{
}

bool Int32Array_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"free") ) { outValue = free_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"arrayRead") ) { outValue = arrayRead_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"arrayWrite") ) { outValue = arrayWrite_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Int32Array_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Int32Array_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Int32Array_Impl__obj::__mClass;

static ::String Int32Array_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("free",ac,9c,c2,43),
	HX_("get_length",af,04,8f,8f),
	HX_("set",a2,9b,57,00),
	HX_("get",96,80,4e,00),
	HX_("arrayRead",8f,25,19,95),
	HX_("arrayWrite",86,84,86,ca),
	::String(null())
};

void Int32Array_Impl__obj::__register()
{
	Int32Array_Impl__obj _hx_dummy;
	Int32Array_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.arrays._Int32Array.Int32Array_Impl_",99,ad,32,ad);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Int32Array_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Int32Array_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Int32Array_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Int32Array_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Int32Array_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace arrays
} // end namespace _Int32Array
