// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_kha_math_FastVector4
#include <hxinc/kha/math/FastVector4.h>
#endif
#ifndef INCLUDED_kha_math_Vector4
#include <hxinc/kha/math/Vector4.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bb554ca6c8658d76_5_new,"kha.math.FastVector4","new",0xa965ec0b,"kha.math.FastVector4.new","kha/math/FastVector4.hx",5,0x3588e225)
HX_LOCAL_STACK_FRAME(_hx_pos_bb554ca6c8658d76_30_get_length,"kha.math.FastVector4","get_length",0x93788464,"kha.math.FastVector4.get_length","kha/math/FastVector4.hx",30,0x3588e225)
HX_LOCAL_STACK_FRAME(_hx_pos_bb554ca6c8658d76_33_set_length,"kha.math.FastVector4","set_length",0x96f622d8,"kha.math.FastVector4.set_length","kha/math/FastVector4.hx",33,0x3588e225)
HX_LOCAL_STACK_FRAME(_hx_pos_bb554ca6c8658d76_68_toString,"kha.math.FastVector4","toString",0x6fe18921,"kha.math.FastVector4.toString","kha/math/FastVector4.hx",68,0x3588e225)
HX_LOCAL_STACK_FRAME(_hx_pos_bb554ca6c8658d76_13_fromVector4,"kha.math.FastVector4","fromVector4",0xdb439c72,"kha.math.FastVector4.fromVector4","kha/math/FastVector4.hx",13,0x3588e225)
namespace kha{
namespace math{

void FastVector4_obj::__construct(::hx::Null< float >  __o_x,::hx::Null< float >  __o_y,::hx::Null< float >  __o_z,::hx::Null< float >  __o_w){
            		float x = __o_x.Default(0);
            		float y = __o_y.Default(0);
            		float z = __o_z.Default(0);
            		float w = __o_w.Default(1);
            	HX_STACKFRAME(&_hx_pos_bb554ca6c8658d76_5_new)
HXLINE(   6)		this->x = x;
HXLINE(   7)		this->y = y;
HXLINE(   8)		this->z = z;
HXLINE(   9)		this->w = w;
            	}

Dynamic FastVector4_obj::__CreateEmpty() { return new FastVector4_obj; }

void *FastVector4_obj::_hx_vtable = 0;

Dynamic FastVector4_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FastVector4_obj > _hx_result = new FastVector4_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool FastVector4_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x62f567ed;
}

float FastVector4_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_bb554ca6c8658d76_30_get_length)
HXDLIN(  30)		return ( (float)(::Math_obj::sqrt(( (Float)(((((this->x * this->x) + (this->y * this->y)) + (this->z * this->z)) + (this->w * this->w))) ))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(FastVector4_obj,get_length,return )

float FastVector4_obj::set_length(float length){
            	HX_STACKFRAME(&_hx_pos_bb554ca6c8658d76_33_set_length)
HXLINE(  34)		float currentLength = ( (float)(::Math_obj::sqrt(( (Float)(((((this->x * this->x) + (this->y * this->y)) + (this->z * this->z)) + (this->w * this->w))) ))) );
HXLINE(  35)		if ((currentLength == 0)) {
HXLINE(  35)			return ( (float)(0) );
            		}
HXLINE(  36)		Float mul = (( (Float)(length) ) / ( (Float)(currentLength) ));
HXLINE(  37)		 ::kha::math::FastVector4 _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  37)		_hx_tmp->x = (_hx_tmp->x * ( (float)(mul) ));
HXLINE(  38)		 ::kha::math::FastVector4 _hx_tmp1 = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  38)		_hx_tmp1->y = (_hx_tmp1->y * ( (float)(mul) ));
HXLINE(  39)		 ::kha::math::FastVector4 _hx_tmp2 = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  39)		_hx_tmp2->z = (_hx_tmp2->z * ( (float)(mul) ));
HXLINE(  40)		 ::kha::math::FastVector4 _hx_tmp3 = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  40)		_hx_tmp3->w = (_hx_tmp3->w * ( (float)(mul) ));
HXLINE(  41)		return length;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FastVector4_obj,set_length,return )

::String FastVector4_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_bb554ca6c8658d76_68_toString)
HXDLIN(  68)		::String _hx_tmp = ((HX_("FastVector4(",d3,9b,e5,0d) + ::Std_obj::string(this->x)) + HX_(", ",74,26,00,00));
HXDLIN(  68)		::String _hx_tmp1 = ((_hx_tmp + ::Std_obj::string(this->y)) + HX_(", ",74,26,00,00));
HXDLIN(  68)		::String _hx_tmp2 = ((_hx_tmp1 + ::Std_obj::string(this->z)) + HX_(", ",74,26,00,00));
HXDLIN(  68)		return ((_hx_tmp2 + ::Std_obj::string(this->w)) + HX_(")",29,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(FastVector4_obj,toString,return )

 ::kha::math::FastVector4 FastVector4_obj::fromVector4( ::kha::math::Vector4 v){
            	HX_GC_STACKFRAME(&_hx_pos_bb554ca6c8658d76_13_fromVector4)
HXDLIN(  13)		return  ::kha::math::FastVector4_obj::__alloc( HX_CTX ,v->x,v->y,v->z,v->w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FastVector4_obj,fromVector4,return )


::hx::ObjectPtr< FastVector4_obj > FastVector4_obj::__new(::hx::Null< float >  __o_x,::hx::Null< float >  __o_y,::hx::Null< float >  __o_z,::hx::Null< float >  __o_w) {
	::hx::ObjectPtr< FastVector4_obj > __this = new FastVector4_obj();
	__this->__construct(__o_x,__o_y,__o_z,__o_w);
	return __this;
}

::hx::ObjectPtr< FastVector4_obj > FastVector4_obj::__alloc(::hx::Ctx *_hx_ctx,::hx::Null< float >  __o_x,::hx::Null< float >  __o_y,::hx::Null< float >  __o_z,::hx::Null< float >  __o_w) {
	FastVector4_obj *__this = (FastVector4_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FastVector4_obj), false, "kha.math.FastVector4"));
	*(void **)__this = FastVector4_obj::_hx_vtable;
	__this->__construct(__o_x,__o_y,__o_z,__o_w);
	return __this;
}

FastVector4_obj::FastVector4_obj()
{
}

::hx::Val FastVector4_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return ::hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return ::hx::Val( y ); }
		if (HX_FIELD_EQ(inName,"z") ) { return ::hx::Val( z ); }
		if (HX_FIELD_EQ(inName,"w") ) { return ::hx::Val( w ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_length() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { return ::hx::Val( get_length_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_length") ) { return ::hx::Val( set_length_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool FastVector4_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"fromVector4") ) { outValue = fromVector4_dyn(); return true; }
	}
	return false;
}

::hx::Val FastVector4_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"z") ) { z=inValue.Cast< float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"w") ) { w=inValue.Cast< float >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_length(inValue.Cast< float >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FastVector4_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("x",78,00,00,00));
	outFields->push(HX_("y",79,00,00,00));
	outFields->push(HX_("z",7a,00,00,00));
	outFields->push(HX_("w",77,00,00,00));
	outFields->push(HX_("length",e6,94,07,9f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FastVector4_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /* float */ ,(int)offsetof(FastVector4_obj,x),HX_("x",78,00,00,00)},
	{::hx::fsUnknown /* float */ ,(int)offsetof(FastVector4_obj,y),HX_("y",79,00,00,00)},
	{::hx::fsUnknown /* float */ ,(int)offsetof(FastVector4_obj,z),HX_("z",7a,00,00,00)},
	{::hx::fsUnknown /* float */ ,(int)offsetof(FastVector4_obj,w),HX_("w",77,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FastVector4_obj_sStaticStorageInfo = 0;
#endif

static ::String FastVector4_obj_sMemberFields[] = {
	HX_("x",78,00,00,00),
	HX_("y",79,00,00,00),
	HX_("z",7a,00,00,00),
	HX_("w",77,00,00,00),
	HX_("get_length",af,04,8f,8f),
	HX_("set_length",23,a3,0c,93),
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

::hx::Class FastVector4_obj::__mClass;

static ::String FastVector4_obj_sStaticFields[] = {
	HX_("fromVector4",c7,5d,dd,72),
	::String(null())
};

void FastVector4_obj::__register()
{
	FastVector4_obj _hx_dummy;
	FastVector4_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.math.FastVector4",99,8a,4e,67);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FastVector4_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FastVector4_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FastVector4_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FastVector4_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FastVector4_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FastVector4_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace math
