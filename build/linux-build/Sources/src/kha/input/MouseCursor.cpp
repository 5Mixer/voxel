// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_kha_input_MouseCursor
#include <hxinc/kha/input/MouseCursor.h>
#endif
namespace kha{
namespace input{

::kha::input::MouseCursor MouseCursor_obj::Crosshair;

::kha::input::MouseCursor MouseCursor_obj::Default;

::kha::input::MouseCursor MouseCursor_obj::EastWestResize;

::kha::input::MouseCursor MouseCursor_obj::Grab;

::kha::input::MouseCursor MouseCursor_obj::Grabbing;

::kha::input::MouseCursor MouseCursor_obj::NorthEastResize;

::kha::input::MouseCursor MouseCursor_obj::NorthSouthResize;

::kha::input::MouseCursor MouseCursor_obj::NorthWestResize;

::kha::input::MouseCursor MouseCursor_obj::NotAllowed;

::kha::input::MouseCursor MouseCursor_obj::Pointer;

::kha::input::MouseCursor MouseCursor_obj::SouthEastResize;

::kha::input::MouseCursor MouseCursor_obj::SouthWestResize;

::kha::input::MouseCursor MouseCursor_obj::Text;

::kha::input::MouseCursor MouseCursor_obj::Wait;

bool MouseCursor_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Crosshair",82,26,9b,2c)) { outValue = MouseCursor_obj::Crosshair; return true; }
	if (inName==HX_("Default",a1,00,15,69)) { outValue = MouseCursor_obj::Default; return true; }
	if (inName==HX_("EastWestResize",00,ea,6d,2d)) { outValue = MouseCursor_obj::EastWestResize; return true; }
	if (inName==HX_("Grab",ec,fb,44,2f)) { outValue = MouseCursor_obj::Grab; return true; }
	if (inName==HX_("Grabbing",ac,57,86,d8)) { outValue = MouseCursor_obj::Grabbing; return true; }
	if (inName==HX_("NorthEastResize",d6,ee,a0,8a)) { outValue = MouseCursor_obj::NorthEastResize; return true; }
	if (inName==HX_("NorthSouthResize",3c,d3,52,e9)) { outValue = MouseCursor_obj::NorthSouthResize; return true; }
	if (inName==HX_("NorthWestResize",88,00,a3,5b)) { outValue = MouseCursor_obj::NorthWestResize; return true; }
	if (inName==HX_("NotAllowed",75,dc,b6,2e)) { outValue = MouseCursor_obj::NotAllowed; return true; }
	if (inName==HX_("Pointer",9d,e8,72,1e)) { outValue = MouseCursor_obj::Pointer; return true; }
	if (inName==HX_("SouthEastResize",1e,86,cc,44)) { outValue = MouseCursor_obj::SouthEastResize; return true; }
	if (inName==HX_("SouthWestResize",d0,97,ce,15)) { outValue = MouseCursor_obj::SouthWestResize; return true; }
	if (inName==HX_("Text",cd,f8,d2,37)) { outValue = MouseCursor_obj::Text; return true; }
	if (inName==HX_("Wait",95,86,cb,39)) { outValue = MouseCursor_obj::Wait; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(MouseCursor_obj)

int MouseCursor_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Crosshair",82,26,9b,2c)) return 13;
	if (inName==HX_("Default",a1,00,15,69)) return 0;
	if (inName==HX_("EastWestResize",00,ea,6d,2d)) return 3;
	if (inName==HX_("Grab",ec,fb,44,2f)) return 9;
	if (inName==HX_("Grabbing",ac,57,86,d8)) return 10;
	if (inName==HX_("NorthEastResize",d6,ee,a0,8a)) return 5;
	if (inName==HX_("NorthSouthResize",3c,d3,52,e9)) return 4;
	if (inName==HX_("NorthWestResize",88,00,a3,5b)) return 7;
	if (inName==HX_("NotAllowed",75,dc,b6,2e)) return 11;
	if (inName==HX_("Pointer",9d,e8,72,1e)) return 1;
	if (inName==HX_("SouthEastResize",1e,86,cc,44)) return 6;
	if (inName==HX_("SouthWestResize",d0,97,ce,15)) return 8;
	if (inName==HX_("Text",cd,f8,d2,37)) return 2;
	if (inName==HX_("Wait",95,86,cb,39)) return 12;
	return super::__FindIndex(inName);
}

int MouseCursor_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Crosshair",82,26,9b,2c)) return 0;
	if (inName==HX_("Default",a1,00,15,69)) return 0;
	if (inName==HX_("EastWestResize",00,ea,6d,2d)) return 0;
	if (inName==HX_("Grab",ec,fb,44,2f)) return 0;
	if (inName==HX_("Grabbing",ac,57,86,d8)) return 0;
	if (inName==HX_("NorthEastResize",d6,ee,a0,8a)) return 0;
	if (inName==HX_("NorthSouthResize",3c,d3,52,e9)) return 0;
	if (inName==HX_("NorthWestResize",88,00,a3,5b)) return 0;
	if (inName==HX_("NotAllowed",75,dc,b6,2e)) return 0;
	if (inName==HX_("Pointer",9d,e8,72,1e)) return 0;
	if (inName==HX_("SouthEastResize",1e,86,cc,44)) return 0;
	if (inName==HX_("SouthWestResize",d0,97,ce,15)) return 0;
	if (inName==HX_("Text",cd,f8,d2,37)) return 0;
	if (inName==HX_("Wait",95,86,cb,39)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val MouseCursor_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Crosshair",82,26,9b,2c)) return Crosshair;
	if (inName==HX_("Default",a1,00,15,69)) return Default;
	if (inName==HX_("EastWestResize",00,ea,6d,2d)) return EastWestResize;
	if (inName==HX_("Grab",ec,fb,44,2f)) return Grab;
	if (inName==HX_("Grabbing",ac,57,86,d8)) return Grabbing;
	if (inName==HX_("NorthEastResize",d6,ee,a0,8a)) return NorthEastResize;
	if (inName==HX_("NorthSouthResize",3c,d3,52,e9)) return NorthSouthResize;
	if (inName==HX_("NorthWestResize",88,00,a3,5b)) return NorthWestResize;
	if (inName==HX_("NotAllowed",75,dc,b6,2e)) return NotAllowed;
	if (inName==HX_("Pointer",9d,e8,72,1e)) return Pointer;
	if (inName==HX_("SouthEastResize",1e,86,cc,44)) return SouthEastResize;
	if (inName==HX_("SouthWestResize",d0,97,ce,15)) return SouthWestResize;
	if (inName==HX_("Text",cd,f8,d2,37)) return Text;
	if (inName==HX_("Wait",95,86,cb,39)) return Wait;
	return super::__Field(inName,inCallProp);
}

static ::String MouseCursor_obj_sStaticFields[] = {
	HX_("Default",a1,00,15,69),
	HX_("Pointer",9d,e8,72,1e),
	HX_("Text",cd,f8,d2,37),
	HX_("EastWestResize",00,ea,6d,2d),
	HX_("NorthSouthResize",3c,d3,52,e9),
	HX_("NorthEastResize",d6,ee,a0,8a),
	HX_("SouthEastResize",1e,86,cc,44),
	HX_("NorthWestResize",88,00,a3,5b),
	HX_("SouthWestResize",d0,97,ce,15),
	HX_("Grab",ec,fb,44,2f),
	HX_("Grabbing",ac,57,86,d8),
	HX_("NotAllowed",75,dc,b6,2e),
	HX_("Wait",95,86,cb,39),
	HX_("Crosshair",82,26,9b,2c),
	::String(null())
};

::hx::Class MouseCursor_obj::__mClass;

Dynamic __Create_MouseCursor_obj() { return new MouseCursor_obj; }

void MouseCursor_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("kha.input.MouseCursor",8d,09,b2,8b), ::hx::TCanCast< MouseCursor_obj >,MouseCursor_obj_sStaticFields,0,
	&__Create_MouseCursor_obj, &__Create,
	&super::__SGetClass(), &CreateMouseCursor_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &MouseCursor_obj::__GetStatic;
}

void MouseCursor_obj::__boot()
{
Crosshair = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("Crosshair",82,26,9b,2c),13);
Default = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("Default",a1,00,15,69),0);
EastWestResize = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("EastWestResize",00,ea,6d,2d),3);
Grab = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("Grab",ec,fb,44,2f),9);
Grabbing = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("Grabbing",ac,57,86,d8),10);
NorthEastResize = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("NorthEastResize",d6,ee,a0,8a),5);
NorthSouthResize = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("NorthSouthResize",3c,d3,52,e9),4);
NorthWestResize = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("NorthWestResize",88,00,a3,5b),7);
NotAllowed = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("NotAllowed",75,dc,b6,2e),11);
Pointer = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("Pointer",9d,e8,72,1e),1);
SouthEastResize = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("SouthEastResize",1e,86,cc,44),6);
SouthWestResize = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("SouthWestResize",d0,97,ce,15),8);
Text = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("Text",cd,f8,d2,37),2);
Wait = ::hx::CreateConstEnum< MouseCursor_obj >(HX_("Wait",95,86,cb,39),12);
}


} // end namespace kha
} // end namespace input
