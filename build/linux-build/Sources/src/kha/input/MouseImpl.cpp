// Generated by Haxe 4.1.3
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <hxinc/Type.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <hxinc/haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_kha_SystemImpl
#include <hxinc/kha/SystemImpl.h>
#endif
#ifndef INCLUDED_kha_input_Mouse
#include <hxinc/kha/input/Mouse.h>
#endif
#ifndef INCLUDED_kha_input_MouseCursor
#include <hxinc/kha/input/MouseCursor.h>
#endif
#ifndef INCLUDED_kha_input_MouseImpl
#include <hxinc/kha/input/MouseImpl.h>
#endif
#ifndef INCLUDED_kha_netsync_Controller
#include <hxinc/kha/netsync/Controller.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_8_new,"kha.input.MouseImpl","new",0x6e75e649,"kha.input.MouseImpl.new","kha/input/MouseImpl.hx",8,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_12_lock,"kha.input.MouseImpl","lock",0x3768b1e2,"kha.input.MouseImpl.lock","kha/input/MouseImpl.hx",12,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_16_unlock,"kha.input.MouseImpl","unlock",0x7428647b,"kha.input.MouseImpl.unlock","kha/input/MouseImpl.hx",16,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_20_canLock,"kha.input.MouseImpl","canLock",0x1fbd4284,"kha.input.MouseImpl.canLock","kha/input/MouseImpl.hx",20,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_24_isLocked,"kha.input.MouseImpl","isLocked",0x70897e0b,"kha.input.MouseImpl.isLocked","kha/input/MouseImpl.hx",24,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_28_notifyOnLockChange,"kha.input.MouseImpl","notifyOnLockChange",0x3d7c2e5a,"kha.input.MouseImpl.notifyOnLockChange","kha/input/MouseImpl.hx",28,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_32_removeFromLockChange,"kha.input.MouseImpl","removeFromLockChange",0xea7d8920,"kha.input.MouseImpl.removeFromLockChange","kha/input/MouseImpl.hx",32,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_36_hideSystemCursor,"kha.input.MouseImpl","hideSystemCursor",0xcdb13f7e,"kha.input.MouseImpl.hideSystemCursor","kha/input/MouseImpl.hx",36,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_40_showSystemCursor,"kha.input.MouseImpl","showSystemCursor",0x0cc2cc39,"kha.input.MouseImpl.showSystemCursor","kha/input/MouseImpl.hx",40,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_44_setSystemCursor,"kha.input.MouseImpl","setSystemCursor",0xa0539950,"kha.input.MouseImpl.setSystemCursor","kha/input/MouseImpl.hx",44,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_48d12ae2842be395_117__receive,"kha.input.MouseImpl","_receive",0x226998db,"kha.input.MouseImpl._receive","kha/netsync/ControllerBuilder.hx",117,0xeaffa5e1)
namespace kha{
namespace input{

void MouseImpl_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_8_new)
HXDLIN(   8)		super::__construct();
            	}

Dynamic MouseImpl_obj::__CreateEmpty() { return new MouseImpl_obj; }

void *MouseImpl_obj::_hx_vtable = 0;

Dynamic MouseImpl_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MouseImpl_obj > _hx_result = new MouseImpl_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MouseImpl_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1d817f74) {
		if (inClassId<=(int)0x15bb1657) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x15bb1657;
		} else {
			return inClassId==(int)0x1d817f74;
		}
	} else {
		return inClassId==(int)0x5a4a979f;
	}
}

void MouseImpl_obj::lock(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_12_lock)
HXDLIN(  12)		::kha::SystemImpl_obj::lockMouse(null());
            	}


void MouseImpl_obj::unlock(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_16_unlock)
HXDLIN(  16)		::kha::SystemImpl_obj::unlockMouse(null());
            	}


bool MouseImpl_obj::canLock(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_20_canLock)
HXDLIN(  20)		return ::kha::SystemImpl_obj::canLockMouse(null());
            	}


bool MouseImpl_obj::isLocked(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_24_isLocked)
HXDLIN(  24)		return ::kha::SystemImpl_obj::isMouseLocked(null());
            	}


void MouseImpl_obj::notifyOnLockChange( ::Dynamic func, ::Dynamic error){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_28_notifyOnLockChange)
HXDLIN(  28)		::kha::SystemImpl_obj::notifyOfMouseLockChange(func,error,null());
            	}


void MouseImpl_obj::removeFromLockChange( ::Dynamic func, ::Dynamic error){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_32_removeFromLockChange)
HXDLIN(  32)		::kha::SystemImpl_obj::removeFromMouseLockChange(func,error,null());
            	}


void MouseImpl_obj::hideSystemCursor(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_36_hideSystemCursor)
HXDLIN(  36)		::kha::SystemImpl_obj::hideSystemCursor();
            	}


void MouseImpl_obj::showSystemCursor(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_40_showSystemCursor)
HXDLIN(  40)		::kha::SystemImpl_obj::showSystemCursor();
            	}


void MouseImpl_obj::setSystemCursor( ::kha::input::MouseCursor cursor){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_44_setSystemCursor)
HXDLIN(  44)		::kha::SystemImpl_obj::setSystemCursor(_hx_getEnumValueIndex(cursor));
            	}


void MouseImpl_obj::_receive( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_48d12ae2842be395_117__receive)
HXDLIN( 117)		int funcindex = (((( (int)(bytes->b->__get(0)) ) | (( (int)(bytes->b->__get(1)) ) << 8)) | (( (int)(bytes->b->__get(2)) ) << 16)) | (( (int)(bytes->b->__get(3)) ) << 24));
            	}



::hx::ObjectPtr< MouseImpl_obj > MouseImpl_obj::__new() {
	::hx::ObjectPtr< MouseImpl_obj > __this = new MouseImpl_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< MouseImpl_obj > MouseImpl_obj::__alloc(::hx::Ctx *_hx_ctx) {
	MouseImpl_obj *__this = (MouseImpl_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MouseImpl_obj), true, "kha.input.MouseImpl"));
	*(void **)__this = MouseImpl_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

MouseImpl_obj::MouseImpl_obj()
{
}

::hx::Val MouseImpl_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"lock") ) { return ::hx::Val( lock_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"unlock") ) { return ::hx::Val( unlock_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"canLock") ) { return ::hx::Val( canLock_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"isLocked") ) { return ::hx::Val( isLocked_dyn() ); }
		if (HX_FIELD_EQ(inName,"_receive") ) { return ::hx::Val( _receive_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"setSystemCursor") ) { return ::hx::Val( setSystemCursor_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"hideSystemCursor") ) { return ::hx::Val( hideSystemCursor_dyn() ); }
		if (HX_FIELD_EQ(inName,"showSystemCursor") ) { return ::hx::Val( showSystemCursor_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"notifyOnLockChange") ) { return ::hx::Val( notifyOnLockChange_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"removeFromLockChange") ) { return ::hx::Val( removeFromLockChange_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *MouseImpl_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *MouseImpl_obj_sStaticStorageInfo = 0;
#endif

static ::String MouseImpl_obj_sMemberFields[] = {
	HX_("lock",eb,9b,b7,47),
	HX_("unlock",c4,a2,8c,65),
	HX_("canLock",1b,84,0f,66),
	HX_("isLocked",94,a0,30,b2),
	HX_("notifyOnLockChange",23,36,29,37),
	HX_("removeFromLockChange",29,d5,52,6f),
	HX_("hideSystemCursor",07,93,7b,81),
	HX_("showSystemCursor",c2,1f,8d,c0),
	HX_("setSystemCursor",e7,c9,b3,40),
	HX_("_receive",64,bb,10,64),
	::String(null()) };

::hx::Class MouseImpl_obj::__mClass;

void MouseImpl_obj::__register()
{
	MouseImpl_obj _hx_dummy;
	MouseImpl_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("kha.input.MouseImpl",d7,0d,89,d6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MouseImpl_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MouseImpl_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MouseImpl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MouseImpl_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace input
