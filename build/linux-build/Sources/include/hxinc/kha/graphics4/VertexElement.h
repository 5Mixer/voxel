// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha_graphics4_VertexElement
#define INCLUDED_kha_graphics4_VertexElement

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_852acc89e80f4237_7_new)
HX_DECLARE_CLASS2(kha,graphics4,VertexElement)

namespace kha{
namespace graphics4{


class HXCPP_CLASS_ATTRIBUTES VertexElement_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef VertexElement_obj OBJ_;
		VertexElement_obj();

	public:
		enum { _hx_ClassId = 0x55065f13 };

		void __construct(::String name,int data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.graphics4.VertexElement")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"kha.graphics4.VertexElement"); }

		inline static ::hx::ObjectPtr< VertexElement_obj > __new(::String name,int data) {
			::hx::ObjectPtr< VertexElement_obj > __this = new VertexElement_obj();
			__this->__construct(name,data);
			return __this;
		}

		inline static ::hx::ObjectPtr< VertexElement_obj > __alloc(::hx::Ctx *_hx_ctx,::String name,int data) {
			VertexElement_obj *__this = (VertexElement_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(VertexElement_obj), true, "kha.graphics4.VertexElement"));
			*(void **)__this = VertexElement_obj::_hx_vtable;
{
            	HX_GC_STACKFRAME(&_hx_pos_852acc89e80f4237_7_new)
HXLINE(   8)		( ( ::kha::graphics4::VertexElement)(__this) )->_hx_set_name(HX_CTX, name);
HXLINE(   9)		( ( ::kha::graphics4::VertexElement)(__this) )->data = data;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~VertexElement_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("VertexElement",98,3f,84,c0); }

		::String name;
		inline ::String _hx_set_name(::hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return name=_hx_v; }
		int data;
};

} // end namespace kha
} // end namespace graphics4

#endif /* INCLUDED_kha_graphics4_VertexElement */ 
