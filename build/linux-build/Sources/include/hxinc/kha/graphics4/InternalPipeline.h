// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha_graphics4_InternalPipeline
#define INCLUDED_kha_graphics4_InternalPipeline

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(kha,graphics4,ConstantLocation)
HX_DECLARE_CLASS2(kha,graphics4,InternalPipeline)
HX_DECLARE_CLASS2(kha,graphics4,PipelineState)
HX_DECLARE_CLASS2(kha,graphics4,PipelineStateBase)
HX_DECLARE_CLASS2(kha,graphics4,TextureUnit)

namespace kha{
namespace graphics4{


class HXCPP_CLASS_ATTRIBUTES InternalPipeline_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef InternalPipeline_obj OBJ_;
		InternalPipeline_obj();

	public:
		enum { _hx_ClassId = 0x0b0c21cc };

		void __construct( ::kha::graphics4::PipelineState pipeline,::Dynamic projectionLocation,::Dynamic textureLocation);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.graphics4.InternalPipeline")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"kha.graphics4.InternalPipeline"); }
		static ::hx::ObjectPtr< InternalPipeline_obj > __new( ::kha::graphics4::PipelineState pipeline,::Dynamic projectionLocation,::Dynamic textureLocation);
		static ::hx::ObjectPtr< InternalPipeline_obj > __alloc(::hx::Ctx *_hx_ctx, ::kha::graphics4::PipelineState pipeline,::Dynamic projectionLocation,::Dynamic textureLocation);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~InternalPipeline_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("InternalPipeline",9f,bf,6b,32); }

		 ::kha::graphics4::PipelineState pipeline;
		inline  ::kha::graphics4::PipelineState _hx_set_pipeline(::hx::StackContext *_hx_ctx, ::kha::graphics4::PipelineState _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return pipeline=_hx_v; }
		::Dynamic projectionLocation;
		inline ::Dynamic _hx_set_projectionLocation(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return projectionLocation=_hx_v; }
		::Dynamic textureLocation;
		inline ::Dynamic _hx_set_textureLocation(::hx::StackContext *_hx_ctx,::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return textureLocation=_hx_v; }
};

} // end namespace kha
} // end namespace graphics4

#endif /* INCLUDED_kha_graphics4_InternalPipeline */ 
