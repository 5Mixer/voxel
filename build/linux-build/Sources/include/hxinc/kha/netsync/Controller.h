// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha_netsync_Controller
#define INCLUDED_kha_netsync_Controller

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(kha,netsync,Controller)

namespace kha{
namespace netsync{


class HXCPP_CLASS_ATTRIBUTES Controller_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Controller_obj OBJ_;
		Controller_obj();

	public:
		enum { _hx_ClassId = 0x1d817f74 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.netsync.Controller")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"kha.netsync.Controller"); }
		static ::hx::ObjectPtr< Controller_obj > __new();
		static ::hx::ObjectPtr< Controller_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Controller_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Controller",bc,9c,6f,fb); }

		int _hx___id;
		int _inputBufferIndex;
		 ::haxe::io::Bytes _inputBuffer;
		inline  ::haxe::io::Bytes _hx_set__inputBuffer(::hx::StackContext *_hx_ctx, ::haxe::io::Bytes _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return _inputBuffer=_hx_v; }
		int _id();
		::Dynamic _id_dyn();

		virtual void _receive( ::haxe::io::Bytes bytes);
		::Dynamic _receive_dyn();

};

} // end namespace kha
} // end namespace netsync

#endif /* INCLUDED_kha_netsync_Controller */ 
