// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha_ImageCallback
#define INCLUDED_kha_ImageCallback

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Image)
HX_DECLARE_CLASS1(kha,ImageCallback)
HX_DECLARE_CLASS1(kha,Resource)

namespace kha{


class HXCPP_CLASS_ATTRIBUTES ImageCallback_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ImageCallback_obj OBJ_;
		ImageCallback_obj();

	public:
		enum { _hx_ClassId = 0x36b5cc7c };

		void __construct( ::Dynamic success, ::Dynamic error);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.ImageCallback")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"kha.ImageCallback"); }
		static ::hx::ObjectPtr< ImageCallback_obj > __new( ::Dynamic success, ::Dynamic error);
		static ::hx::ObjectPtr< ImageCallback_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic success, ::Dynamic error);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ImageCallback_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ImageCallback",20,18,99,a6); }

		 ::Dynamic success;
		inline  ::Dynamic _hx_set_success(::hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return success=_hx_v; }
		Dynamic success_dyn() { return success;}
		 ::Dynamic error;
		inline  ::Dynamic _hx_set_error(::hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return error=_hx_v; }
		Dynamic error_dyn() { return error;}
};

} // end namespace kha

#endif /* INCLUDED_kha_ImageCallback */ 
