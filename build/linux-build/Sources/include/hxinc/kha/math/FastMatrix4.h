// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha_math_FastMatrix4
#define INCLUDED_kha_math_FastMatrix4

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_13a5dc49b32a5012_15_new)
HX_DECLARE_CLASS2(kha,math,FastMatrix4)
HX_DECLARE_CLASS2(kha,math,FastVector3)
HX_DECLARE_CLASS2(kha,math,Matrix4)

namespace kha{
namespace math{


class HXCPP_CLASS_ATTRIBUTES FastMatrix4_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FastMatrix4_obj OBJ_;
		FastMatrix4_obj();

	public:
		enum { _hx_ClassId = 0x1bbfb0af };

		void __construct(float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kha.math.FastMatrix4")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"kha.math.FastMatrix4"); }

		inline static ::hx::ObjectPtr< FastMatrix4_obj > __new(float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33) {
			::hx::ObjectPtr< FastMatrix4_obj > __this = new FastMatrix4_obj();
			__this->__construct(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
			return __this;
		}

		inline static ::hx::ObjectPtr< FastMatrix4_obj > __alloc(::hx::Ctx *_hx_ctx,float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33) {
			FastMatrix4_obj *__this = (FastMatrix4_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FastMatrix4_obj), false, "kha.math.FastMatrix4"));
			*(void **)__this = FastMatrix4_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_13a5dc49b32a5012_15_new)
HXLINE(  16)		( ( ::kha::math::FastMatrix4)(__this) )->_00 = _00;
HXDLIN(  16)		( ( ::kha::math::FastMatrix4)(__this) )->_10 = _10;
HXDLIN(  16)		( ( ::kha::math::FastMatrix4)(__this) )->_20 = _20;
HXDLIN(  16)		( ( ::kha::math::FastMatrix4)(__this) )->_30 = _30;
HXLINE(  17)		( ( ::kha::math::FastMatrix4)(__this) )->_01 = _01;
HXDLIN(  17)		( ( ::kha::math::FastMatrix4)(__this) )->_11 = _11;
HXDLIN(  17)		( ( ::kha::math::FastMatrix4)(__this) )->_21 = _21;
HXDLIN(  17)		( ( ::kha::math::FastMatrix4)(__this) )->_31 = _31;
HXLINE(  18)		( ( ::kha::math::FastMatrix4)(__this) )->_02 = _02;
HXDLIN(  18)		( ( ::kha::math::FastMatrix4)(__this) )->_12 = _12;
HXDLIN(  18)		( ( ::kha::math::FastMatrix4)(__this) )->_22 = _22;
HXDLIN(  18)		( ( ::kha::math::FastMatrix4)(__this) )->_32 = _32;
HXLINE(  19)		( ( ::kha::math::FastMatrix4)(__this) )->_03 = _03;
HXDLIN(  19)		( ( ::kha::math::FastMatrix4)(__this) )->_13 = _13;
HXDLIN(  19)		( ( ::kha::math::FastMatrix4)(__this) )->_23 = _23;
HXDLIN(  19)		( ( ::kha::math::FastMatrix4)(__this) )->_33 = _33;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FastMatrix4_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FastMatrix4",77,0b,0f,27); }

		static void __boot();
		static int width;
		static int height;
		static  ::kha::math::FastMatrix4 fromMatrix4( ::kha::math::Matrix4 m);
		static ::Dynamic fromMatrix4_dyn();

		static  ::kha::math::FastMatrix4 orthogonalProjection(float left,float right,float bottom,float top,float zn,float zf);
		static ::Dynamic orthogonalProjection_dyn();

		static  ::kha::math::FastMatrix4 perspectiveProjection(float fovY,float aspect,float zn,float zf);
		static ::Dynamic perspectiveProjection_dyn();

		static  ::kha::math::FastMatrix4 lookAt( ::kha::math::FastVector3 eye, ::kha::math::FastVector3 at, ::kha::math::FastVector3 up);
		static ::Dynamic lookAt_dyn();

		float _00;
		float _10;
		float _20;
		float _30;
		float _01;
		float _11;
		float _21;
		float _31;
		float _02;
		float _12;
		float _22;
		float _32;
		float _03;
		float _13;
		float _23;
		float _33;
};

} // end namespace kha
} // end namespace math

#endif /* INCLUDED_kha_math_FastMatrix4 */ 
