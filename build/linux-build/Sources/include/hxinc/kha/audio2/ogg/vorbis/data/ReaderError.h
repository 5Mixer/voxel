// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ReaderError
#define INCLUDED_kha_audio2_ogg_vorbis_data_ReaderError

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS5(kha,audio2,ogg,vorbis,data,ReaderError)
HX_DECLARE_CLASS5(kha,audio2,ogg,vorbis,data,ReaderErrorType)

namespace kha{
namespace audio2{
namespace ogg{
namespace vorbis{
namespace data{


class HXCPP_CLASS_ATTRIBUTES ReaderError_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ReaderError_obj OBJ_;
		ReaderError_obj();

	public:
		enum { _hx_ClassId = 0x5a515111 };

		void __construct( ::kha::audio2::ogg::vorbis::data::ReaderErrorType type,::String __o_message, ::Dynamic posInfos);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.audio2.ogg.vorbis.data.ReaderError")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"kha.audio2.ogg.vorbis.data.ReaderError"); }
		static ::hx::ObjectPtr< ReaderError_obj > __new( ::kha::audio2::ogg::vorbis::data::ReaderErrorType type,::String __o_message, ::Dynamic posInfos);
		static ::hx::ObjectPtr< ReaderError_obj > __alloc(::hx::Ctx *_hx_ctx, ::kha::audio2::ogg::vorbis::data::ReaderErrorType type,::String __o_message, ::Dynamic posInfos);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ReaderError_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ReaderError",65,3b,cb,6c); }

		 ::kha::audio2::ogg::vorbis::data::ReaderErrorType type;
		inline  ::kha::audio2::ogg::vorbis::data::ReaderErrorType _hx_set_type(::hx::StackContext *_hx_ctx, ::kha::audio2::ogg::vorbis::data::ReaderErrorType _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return type=_hx_v; }
		::String message;
		inline ::String _hx_set_message(::hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return message=_hx_v; }
		 ::Dynamic posInfos;
		inline  ::Dynamic _hx_set_posInfos(::hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return posInfos=_hx_v; }
};

} // end namespace kha
} // end namespace audio2
} // end namespace ogg
} // end namespace vorbis
} // end namespace data

#endif /* INCLUDED_kha_audio2_ogg_vorbis_data_ReaderError */ 
