// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha__Color_Color_Impl_
#define INCLUDED_kha__Color_Color_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(kha,_Color,Color_Impl_)

namespace kha{
namespace _Color{


class HXCPP_CLASS_ATTRIBUTES Color_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Color_Impl__obj OBJ_;
		Color_Impl__obj();

	public:
		enum { _hx_ClassId = 0x1fe64883 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kha._Color.Color_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"kha._Color.Color_Impl_"); }

		inline static ::hx::ObjectPtr< Color_Impl__obj > __new() {
			::hx::ObjectPtr< Color_Impl__obj > __this = new Color_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Color_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Color_Impl__obj *__this = (Color_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Color_Impl__obj), false, "kha._Color.Color_Impl_"));
			*(void **)__this = Color_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Color_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Color_Impl_",23,f2,4f,b6); }

		static void __boot();
		static int Black;
		static int White;
		static int Red;
		static int Blue;
		static int Green;
		static int Magenta;
		static int Yellow;
		static int Cyan;
		static int Purple;
		static int Pink;
		static int Orange;
		static int Transparent;
		static float invMaxChannelValue;
		static int fromValue(int value);
		static ::Dynamic fromValue_dyn();

		static int fromBytes(int r,int g,int b,::hx::Null< int >  a);
		static ::Dynamic fromBytes_dyn();

		static int fromFloats(float r,float g,float b,::hx::Null< float >  a);
		static ::Dynamic fromFloats_dyn();

		static int fromString(::String value);
		static ::Dynamic fromString_dyn();

		static int _new(int value);
		static ::Dynamic _new_dyn();

		static int get_value(int this1);
		static ::Dynamic get_value_dyn();

		static int set_value(int this1,int value);
		static ::Dynamic set_value_dyn();

		static int get_Rb(int this1);
		static ::Dynamic get_Rb_dyn();

		static int get_Gb(int this1);
		static ::Dynamic get_Gb_dyn();

		static int get_Bb(int this1);
		static ::Dynamic get_Bb_dyn();

		static int get_Ab(int this1);
		static ::Dynamic get_Ab_dyn();

		static int set_Rb(int this1,int i);
		static ::Dynamic set_Rb_dyn();

		static int set_Gb(int this1,int i);
		static ::Dynamic set_Gb_dyn();

		static int set_Bb(int this1,int i);
		static ::Dynamic set_Bb_dyn();

		static int set_Ab(int this1,int i);
		static ::Dynamic set_Ab_dyn();

		static float get_R(int this1);
		static ::Dynamic get_R_dyn();

		static float get_G(int this1);
		static ::Dynamic get_G_dyn();

		static float get_B(int this1);
		static ::Dynamic get_B_dyn();

		static float get_A(int this1);
		static ::Dynamic get_A_dyn();

		static float set_R(int this1,float f);
		static ::Dynamic set_R_dyn();

		static float set_G(int this1,float f);
		static ::Dynamic set_G_dyn();

		static float set_B(int this1,float f);
		static ::Dynamic set_B_dyn();

		static float set_A(int this1,float f);
		static ::Dynamic set_A_dyn();

};

} // end namespace kha
} // end namespace _Color

#endif /* INCLUDED_kha__Color_Color_Impl_ */ 
