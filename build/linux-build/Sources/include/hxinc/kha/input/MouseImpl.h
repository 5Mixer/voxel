// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha_input_MouseImpl
#define INCLUDED_kha_input_MouseImpl

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_kha_input_Mouse
#include <hxinc/kha/input/Mouse.h>
#endif
HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(kha,input,Mouse)
HX_DECLARE_CLASS2(kha,input,MouseCursor)
HX_DECLARE_CLASS2(kha,input,MouseImpl)
HX_DECLARE_CLASS2(kha,netsync,Controller)

namespace kha{
namespace input{


class HXCPP_CLASS_ATTRIBUTES MouseImpl_obj : public  ::kha::input::Mouse_obj
{
	public:
		typedef  ::kha::input::Mouse_obj super;
		typedef MouseImpl_obj OBJ_;
		MouseImpl_obj();

	public:
		enum { _hx_ClassId = 0x15bb1657 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.input.MouseImpl")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"kha.input.MouseImpl"); }
		static ::hx::ObjectPtr< MouseImpl_obj > __new();
		static ::hx::ObjectPtr< MouseImpl_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MouseImpl_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MouseImpl",85,17,e2,93); }

		void lock();

		void unlock();

		bool canLock();

		bool isLocked();

		void notifyOnLockChange( ::Dynamic func, ::Dynamic error);

		void removeFromLockChange( ::Dynamic func, ::Dynamic error);

		void hideSystemCursor();

		void showSystemCursor();

		void setSystemCursor( ::kha::input::MouseCursor cursor);

		void _receive( ::haxe::io::Bytes bytes);

};

} // end namespace kha
} // end namespace input

#endif /* INCLUDED_kha_input_MouseImpl */ 
