// Generated by Haxe 4.1.3
#ifndef INCLUDED_kha_SystemOptions
#define INCLUDED_kha_SystemOptions

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,FramebufferOptions)
HX_DECLARE_CLASS1(kha,SystemOptions)
HX_DECLARE_CLASS1(kha,WindowOptions)

namespace kha{


class HXCPP_CLASS_ATTRIBUTES SystemOptions_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SystemOptions_obj OBJ_;
		SystemOptions_obj();

	public:
		enum { _hx_ClassId = 0x55992933 };

		void __construct(::String __o_title, ::Dynamic __o_width, ::Dynamic __o_height, ::kha::WindowOptions window, ::kha::FramebufferOptions framebuffer);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.SystemOptions")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"kha.SystemOptions"); }
		static ::hx::ObjectPtr< SystemOptions_obj > __new(::String __o_title, ::Dynamic __o_width, ::Dynamic __o_height, ::kha::WindowOptions window, ::kha::FramebufferOptions framebuffer);
		static ::hx::ObjectPtr< SystemOptions_obj > __alloc(::hx::Ctx *_hx_ctx,::String __o_title, ::Dynamic __o_width, ::Dynamic __o_height, ::kha::WindowOptions window, ::kha::FramebufferOptions framebuffer);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SystemOptions_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SystemOptions",0f,60,94,f7); }

		::String title;
		inline ::String _hx_set_title(::hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return title=_hx_v; }
		int width;
		int height;
		 ::kha::WindowOptions window;
		inline  ::kha::WindowOptions _hx_set_window(::hx::StackContext *_hx_ctx, ::kha::WindowOptions _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return window=_hx_v; }
		 ::kha::FramebufferOptions framebuffer;
		inline  ::kha::FramebufferOptions _hx_set_framebuffer(::hx::StackContext *_hx_ctx, ::kha::FramebufferOptions _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return framebuffer=_hx_v; }
};

} // end namespace kha

#endif /* INCLUDED_kha_SystemOptions */ 
